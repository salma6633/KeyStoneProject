security:

    encoders:
        App\Entity\User:
            algorithm: auto

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            pattern: ^/
            anonymous: true
            provider: app_user_provider
            form_login:
                login_path: app_login
                check_path: app_login
                default_target_path: app_home
                success_handler: App\Security\LoginSuccessHandler
                username_parameter: email
                password_parameter: password

            logout:
                path: app_logout
                target: app_home

            remember_me:
                secret: '%env(APP_SECRET)%'
                lifetime: 604800 # 1 week in seconds
                path: /
                always_remember_me: true

    access_control:
        - { path: ^/back, roles: ROLE_ADMIN }
        - { path: ^/home, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        # - { path: ^/cyber/risk/incident, roles: ROLE_CLIENT }


when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
