{% extends 'home/index.html.twig' %}
{% block body %}

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/5.1.3/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/3.10.2/mdb.min.css" rel="stylesheet">

<section style="margin-top: 130px; margin-bottom: 50px;">
  <div class="container-fluid h-custom">
    <div class="row d-flex justify-content-center align-items-center h-100">
      <div class="col-md-8 col-lg-6 col-xl-4 offset-xl-1">
        {{ form_start(form, {'attr': {'class': 'fade-in'}}) }}

        <div class="d-flex flex-row align-items-center justify-content-center justify-content-lg-start">
          <p class="lead fw-normal mb-0 me-3 text-white" style="margin-left: 120px;">Sign up with</p>
          <button type="button" data-mdb-button-init data-mdb-ripple-init class="btn btn-primary btn-floating mx-1">
            <i class="fab fa-facebook-f"></i>
          </button>
        </div>

        <div class="divider d-flex align-items-center my-4">
          <p class="text-center fw-bold mx-3 mb-0 text-white">Or</p>
        </div>

        <div class="row">
          <div class="col-md-6 mb-4">
            <div class="form-outline">
              {{ form_widget(form.name, {'attr': {'class': 'form-control form-control-lg', 'placeholder': 'Enter your name'}}) }}
              {{ form_label(form.name, 'Name', {'label_attr': {'class': 'form-label text-white'}}) }}
            </div>
          </div>
          <div class="col-md-6 mb-4">
            <div class="form-outline">
              {{ form_widget(form.lastName, {'attr': {'class': 'form-control form-control-lg', 'placeholder': 'Enter your last name'}}) }}
              {{ form_label(form.lastName, 'Last Name', {'label_attr': {'class': 'form-label text-white'}}) }}
            </div>
          </div>
        </div>

        <div class="form-outline mb-4">
          {{ form_widget(form.phone, {'attr': {'class': 'form-control form-control-lg', 'placeholder': 'Enter your phone number'}}) }}
          {{ form_label(form.phone, 'Phone number', {'label_attr': {'class': 'form-label text-white'}}) }}
        </div>

        <!-- Email input -->
        <div class="form-outline mb-4">
          {{ form_widget(form.email, {'attr': {'class': 'form-control form-control-lg', 'placeholder': 'Enter a valid email address'}}) }}
          {{ form_label(form.email, 'Email address', {'label_attr': {'class': 'form-label text-white'}}) }}
        </div>

        <!-- Password input -->
        <div class="form-outline mb-3">
          {{ form_widget(form.password.first, {'attr': {'class': 'form-control form-control-lg', 'placeholder': 'Enter password', 'id': 'password'}}) }}
          {{ form_label(form.password.first, 'Password', {'label_attr': {'class': 'form-label text-white'}}) }}
        </div>

        <!-- Confirm Password input -->
        <div class="form-outline mb-3">
          {{ form_widget(form.password.second, {'attr': {'class': 'form-control form-control-lg', 'placeholder': 'Confirm password'}}) }}
          {{ form_label(form.password.second, 'Confirm password', {'label_attr': {'class': 'form-label text-white'}}) }}
        </div>

        <!-- Password strength meter -->
        <div id="passwordStrength" class="form-text text-muted mb-3">
          <strong>Password strength:</strong>
          <div class="progress">
            <div id="passwordStrengthBar" class="progress-bar" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
          </div>
          <small id="passwordStrengthText" class="form-text text-muted"></small>
        </div>

        <!-- Terms of Use and Privacy Policy checkbox -->
        <div class="form-check mb-4">
          {{ form_widget(form.terms, {'attr': {'class': 'form-check-input'}}) }}
          <label class="form-check-label text-white" for="terms">
            I accept the <a href="#">Terms of Use</a> & <a href="#">Privacy Policy</a>
          </label>
        </div>

        <!-- Submit button -->
        <button type="submit" class="btn btn-primary btn-lg btn-block">Sign up</button>

        {{ form_end(form) }}
      </div>
    </div>
  </div>
</section>

<style>
.divider:after,
.divider:before {
  content: "";
  flex: 1;
  height: 1px;
  background: #eee;
}

.h-custom {
  height: calc(100% - 73px);
}

@media (max-width: 450px) {
  .h-custom {
    height: 100%;
  }
}

.btn {
  background: #FF0000;
  color: #fff;
}

.bg-very-weak {
  background-color: #ff0000 !important; /* Red */
}

.bg-weak {
  background-color: #ff8000 !important; /* Orange */
}

.bg-medium {
  background-color: #ffff00 !important; /* Yellow */
}

.bg-strong {
  background-color: #80ff00 !important; /* Light Green */
}

.bg-very-strong {
  background-color: #00ff00 !important; /* Green */
}
</style>

<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/mdb-ui-kit/3.10.2/mdb.min.js"></script>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    const passwordInput = document.getElementById('password');
    const passwordStrengthBar = document.getElementById('passwordStrengthBar');
    const passwordStrengthText = document.getElementById('passwordStrengthText');

    passwordInput.addEventListener('input', function() {
      const password = passwordInput.value;
      console.log('Password input:', password); // Debugging
      const strength = calculatePasswordStrength(password);

      // Update password strength meter
      console.log('Password strength:', strength); // Debugging
      passwordStrengthBar.style.width = `${strength}%`;
      passwordStrengthBar.setAttribute('aria-valuenow', strength);
      passwordStrengthText.textContent = getPasswordStrengthLabel(strength);
      updatePasswordStrengthBarColor(strength);
    });

    function calculatePasswordStrength(password) {
      let strength = 0;

      // Check for length
      if (password.length >= 8) {
        strength += 20;
      }

      // Check for uppercase letters
      if (/[A-Z]/.test(password)) {
        strength += 20;
      }

      // Check for lowercase letters
      if (/[a-z]/.test(password)) {
        strength += 20;
      }

      // Check for numbers
      if (/\d/.test(password)) {
        strength += 20;
      }

      // Check for special characters
      if (/[\W_]/.test(password)) {
        strength += 20;
      }

      return strength;
    }

    function getPasswordStrengthLabel(strength) {
      if (strength < 20) {
        return 'Very weak';
      } else if (strength < 40) {
        return 'Weak';
      } else if (strength < 60) {
        return 'Medium';
      } else if (strength < 80) {
        return 'Strong';
      } else {
        return 'Very strong';
      }
    }

    function updatePasswordStrengthBarColor(strength) {
      passwordStrengthBar.classList.remove('bg-very-weak', 'bg-weak', 'bg-medium', 'bg-strong', 'bg-very-strong');

      if (strength < 20) {
        passwordStrengthBar.classList.add('bg-very-weak');
      } else if (strength < 40) {
        passwordStrengthBar.classList.add('bg-weak');
      } else if (strength < 60) {
        passwordStrengthBar.classList.add('bg-medium');
      } else if (strength < 80) {
        passwordStrengthBar.classList.add('bg-strong');
      } else {
        passwordStrengthBar.classList.add('bg-very-strong');
      }
    }
  });
</script>

{% endblock %}
